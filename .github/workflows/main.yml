
name: DevSecOps CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest requests httpx

    - name: Lint with ruff
      run: |
        pip install ruff
        ruff check .

    - name: Test with pytest
      run: pytest

  security:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build scanner image
      run: docker build --target scanner -t scanner-image .

    - name: Run security scans in Docker
      run: |
        docker run --rm -v $(pwd):/scan-results scanner-image /bin/bash -c "bandit -r /workspace/app -f sarif -o /scan-results/bandit-report.sarif"
        docker run --rm -v $(pwd):/scan-results scanner-image /bin/bash -c "safety check -r /workspace/requirements.txt --sarif -o /scan-results/safety-report.sarif"

    - name: Run Gitleaks secret scan
      uses: gitleaks/gitleaks-action@v2
      with:
        config-path: .gitleaks.toml
        report-format: sarif
        report-path: gitleaks-report.sarif

    - name: Upload security reports
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: |
          bandit-report.sarif
          safety-report.sarif
          gitleaks-report.sarif

  build-and-scan-image:
    runs-on: ubuntu-latest
    needs: security

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: docker build -t fastapi-test-app:latest .

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'fastapi-test-app:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
